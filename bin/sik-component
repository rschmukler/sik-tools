#! /usr/bin/env node

var path = require('path'),
    fs = require('fs'),
    read = fs.readFile,
    write = fs.writeFile,
    mkdirp = require('mkdirp'),
    join = path.join,
    stat = fs.statSync,
    exists = fs.existsSync,
    sikUtils = require('../index.js'),
    prompt = require('prompt'),
    resolve = path.resolve;

require('colors');

var sik = require('commander');

sik.usage('<component-name> [options]');

sik.option('-d, --dir'         , 'directory, default is lib/components');
sik.option('-j, --javascript'  , 'include javascript');
sik.option('-s, --styles'      , 'include styling');
sik.option('-p, --partials'    , 'include partials');

sik.parse(process.argv);

var componentName = sik.args[0];

if (!componentName) sik.help();

// Configure Prompt
prompt.message = "  ";
prompt.delimiter = " # ";
prompt.start();


// Create target directory
var target = process.cwd() + '/' + (sik.dir || 'lib/components') + '/' + componentName;
console.log("Making target directory: " + path.relative(process.cwd(), target));
mkdirp.sync(target);

// Make component.json
var component = {},
    scriptName = componentName + ".js",
    stylName = componentName + ".styl";

component.name = componentName;
component.version = "0.0.1";
if(sik.partials) component.partials = ["template.jade"];
if(sik.javascript) {
  component.main = scriptName;
  component.scripts = [scriptName];
}
if(sik.styles) component.styles = [stylName];



prompt.get(['description'], function(err, result) {
  console.log("Generating component.json");
  sikUtils.writeFileMessage("component.json");
  component.description = result.description;
  var output = JSON.stringify(component, null, 2);
  write(target + '/component.json', output, function(err) { });
  // Touch Appropriate Files
  var touchFiles = [];
  if(sik.partials) touchFiles.push("template.jade");
  if(sik.styles) touchFiles.push(stylName);
  if(sik.javascript) touchFiles.push(scriptName);
  sikUtils.touchFilesInDir(target, touchFiles);
});
